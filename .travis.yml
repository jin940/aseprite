language: cpp
dist: trusty

compiler:
  # - clang
  - gcc

env:
  global:
   # For Static Code Analysis: Coverity Scan------------------------------------------
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   # via the "travis encrypt" command using the project repo's public key
   - secure: "btPWieD8LaCpZQqV2e2MwbGZRIDIDPcLnbFy5Sr9UEVK3MTFuKW7ZrJwnzL5HyUaPXc7dn8mqnz/YPW/h+41dEENq+SNpEAJLk6HhXOh2sws+W7MXkUEM9Jwbq38mdhdJ7wxIRMV3qct0dYS4e+ljYmV4UUWiwEQ7QeJr4PcH5hOxtZ3ma0j865qvO5ee3UtrMbJy62JnrUxGCNMQ8mdPDqrPoC6RcJg11l+140TiMWT+/WODT1ZcTFGiryd1EFo7RWmBjV/RKwE1F7xchuLn2tGRBL8sw3TzcmjkwHBJQMLlVCiId3NVs5rxvHINcxLlxoJy8RcVQWMBPnBrcysld5ECRv9/6B2YPaCTBPEvHZKnM54UpLvWqDkh1prClfWCZzodCVEYCqeCFmAAXPPiuIFi0c4QPcBakI00KohY5GF9cVkXubwTQwZrswGI6Sykwuv+l9H8G21T1lezYE9RX5B7EtyHRP2CX4USp9wB0WXkE1nhSf8CxC5pouQRIPFjwYnczE8dmCu1cBuPl2GYcVqi3xpy9uGn0RHVUaS/5Bm78N+2xfFJr88d2KYgiJKKapO2ZD0bHjSg2NbfGjn+Hu+l1f1GEZf9wt2NTJ564JGEBFORlQZTem63VzPqxhOp3biSHKt41wCkUyZmLbPvzQTpw8zJqSuBB1tbKVWEyQ="
   # ---------------------------------------------------------------------------------
   
  matrix:
    - ENABLE_UI=OFF
    # - ENABLE_UI=ON
      
before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq g++-4.8
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8"; fi
  # For Static Code Analysis: Coverity Scan-------------------------------------------
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  # ----------------------------------------------------------------------------------
   
  # Install lcov 1.11 for CodeCov
  - wget http://downloads.sourceforge.net/ltp/lcov-1.13.tar.gz
  - tar -xvf lcov-1.13.tar.gz
  - cd lcov-1.13 && sudo make install
  - cd ..

  # Install codecov integration
  - pip install --user codecov
  
  # For Coveralls
  # - pip install --user cpp-coveralls
  
addons:
  coverity_scan:
      project:
        name: "chongx1an/asepriteProject"
        description: "Animated sprite editor & pixel art tool (Windows, macOS, Linux)"
      notification_email: ch0ngx1an@hotmail.com
      build_command_prepend: 
      build_command: "make"
      branch_pattern: travis_test
      
before_script:
  - mkdir build
  - cd build
  - cmake .. -DENABLE_TESTS=ON -DENABLE_UI=$ENABLE_UI
  #- cmake -DENABLE_COVERAGE=ON -DCMAKE_CXX_COMPILER="g++-6" ..
   
script:
  - make
  - |
    if ctest --output-on-failure ; then
      if [[ "$ENABLE_UI" == "OFF" ]]; then
        export ASEPRITE=$PWD/bin/aseprite
        git clone https://github.com/aseprite/tests.git
        cd tests
        bash run-tests.sh
      fi
    fi

after_success: 
  # Creating report
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info #debug info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

